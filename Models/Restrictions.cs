//
//  Generated by XSDConstantsFileGen
//
//  This tool was designed to temporarily 
//      serve as a way to make use of XML
//      schemas without them being available
//      in .NET core yet.  
//      
//  The XSD.exe generator
//      does a lot of the work, but does not
//      insert the object validation features
//      Below is a class hierarchy of the 
//      schema types and means of validating
//      them

using Team1922.MVVM.Models.XML;

namespace Team1922.MVVM.Models
{
	public static class TypeRestrictions
	{
		public static FacetCollection ItemName { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.PatternFacet("^([0-9]|[a-z]|[A-Z]|_)+$")});
		public static FacetCollection AnalogInputId { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.MinInclusiveFacet(-1),new Team1922.MVVM.Models.XML.MaxInclusiveFacet(3)});
		public static FacetCollection DigitalInputId { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.MinInclusiveFacet(-1),new Team1922.MVVM.Models.XML.MaxInclusiveFacet(9)});
		public static FacetCollection PWMOutputId { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.MinInclusiveFacet(-1),new Team1922.MVVM.Models.XML.MaxInclusiveFacet(9)});
		public static FacetCollection RelayOutputId { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.MinInclusiveFacet(-1),new Team1922.MVVM.Models.XML.MaxInclusiveFacet(3)});
		public static FacetCollection CANId { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.MinInclusiveFacet(-1)});
		public static FacetCollection JoystickId { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.MinInclusiveFacet(-1),new Team1922.MVVM.Models.XML.MaxInclusiveFacet(5)});
		public static FacetCollection JoystickButtonId { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.PatternFacet("^[^0].*"),new Team1922.MVVM.Models.XML.MinInclusiveFacet(-1),new Team1922.MVVM.Models.XML.MaxInclusiveFacet(12)});
		public static FacetCollection JoystickAxisId { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.MinInclusiveFacet(-1),new Team1922.MVVM.Models.XML.MaxInclusiveFacet(4)});
		public static FacetCollection RawAnalogInput { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.MinInclusiveFacet(0),new Team1922.MVVM.Models.XML.MaxInclusiveFacet(4095)});
		public static FacetCollection RawSRXInput { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.MinInclusiveFacet(0),new Team1922.MVVM.Models.XML.MaxInclusiveFacet(1023)});
		public static FacetCollection NormalizedDouble { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.MinInclusiveFacet(-1),new Team1922.MVVM.Models.XML.MaxInclusiveFacet(1)});
		public static FacetCollection XPath { get; } = new FacetCollection(new IFacet[]{});
		public static FacetCollection EventTargetType { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.EnumerationFacet("ModifyValue"),new Team1922.MVVM.Models.XML.EnumerationFacet("FullCSMethod")});
		public static FacetCollection RelayDirection { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.EnumerationFacet("ForwardOnly"),new Team1922.MVVM.Models.XML.EnumerationFacet("ReverseOnly"),new Team1922.MVVM.Models.XML.EnumerationFacet("Both")});
		public static FacetCollection RelayValue { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.EnumerationFacet("Off"),new Team1922.MVVM.Models.XML.EnumerationFacet("Forward"),new Team1922.MVVM.Models.XML.EnumerationFacet("Reverse"),new Team1922.MVVM.Models.XML.EnumerationFacet("On")});
		public static FacetCollection CANTalonFeedbackDevice { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.EnumerationFacet("QuadEncoder"),new Team1922.MVVM.Models.XML.EnumerationFacet("AnalogPotentiometer"),new Team1922.MVVM.Models.XML.EnumerationFacet("AnalogEncoder"),new Team1922.MVVM.Models.XML.EnumerationFacet("EncoderRising"),new Team1922.MVVM.Models.XML.EnumerationFacet("EncoderFalling"),new Team1922.MVVM.Models.XML.EnumerationFacet("CtreMagEncoderRelative"),new Team1922.MVVM.Models.XML.EnumerationFacet("CtreMagEncoderAbsolute"),new Team1922.MVVM.Models.XML.EnumerationFacet("PulseWidth")});
		public static FacetCollection CANTalonControlMode { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.EnumerationFacet("PercentVbus"),new Team1922.MVVM.Models.XML.EnumerationFacet("Position"),new Team1922.MVVM.Models.XML.EnumerationFacet("Speed"),new Team1922.MVVM.Models.XML.EnumerationFacet("Current"),new Team1922.MVVM.Models.XML.EnumerationFacet("Voltage"),new Team1922.MVVM.Models.XML.EnumerationFacet("Follower"),new Team1922.MVVM.Models.XML.EnumerationFacet("MotionProfile"),new Team1922.MVVM.Models.XML.EnumerationFacet("Disabled")});
		public static FacetCollection CANTalonNeutralMode { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.EnumerationFacet("Jumper"),new Team1922.MVVM.Models.XML.EnumerationFacet("Brake"),new Team1922.MVVM.Models.XML.EnumerationFacet("Coast")});
		public static FacetCollection CANTalonLimitMode { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.EnumerationFacet("SwitchInputsOnly"),new Team1922.MVVM.Models.XML.EnumerationFacet("SoftPositionLimits"),new Team1922.MVVM.Models.XML.EnumerationFacet("SrxDisableSwitchInputs")});
		public static FacetCollection CANTalonDifferentiationLevel { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.EnumerationFacet("Displacement"),new Team1922.MVVM.Models.XML.EnumerationFacet("Speed")});
		public static class Robot
		{
			public static FacetCollection TeamNumber { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.TotalDigitsFacet(4)});
			public static FacetCollection AnalogInputSampleRate { get; } = new FacetCollection(new IFacet[]{new Team1922.MVVM.Models.XML.MinInclusiveFacet(1),new Team1922.MVVM.Models.XML.MaxInclusiveFacet(62500)});

		}

	}
}
