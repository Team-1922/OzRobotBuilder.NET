using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace Team1922.MVVM.Models.XML
{
    /// <summary>
    /// Represents a test unit loaded from an XML schema;
    ///     since .NET core does not support XML schema loading
    ///     yet; this will need to be generated by a tool much
    ///     like RobotSchema.xsd
    /// </summary>
    public interface IFacet
    {
        /// <summary>
        /// Tests <paramref name="value"/>
        /// </summary>
        /// <param name="value">the value to test</param>
        /// <returns>the success of the test</returns>
        bool TestValue(object value);
        /// <summary>
        /// To give the user a readable way to see facit errors, they must have a string representation
        /// </summary>
        /// <returns>the string representation of this facet</returns>
        string Stringify();
        /// <summary>
        /// In order to generate code; there has to be some sort of serialization
        /// </summary>
        /// <returns>a c# statement to construct a new instance (i.e. "new MyFacet(...)"</returns>
        string GetConstructionString();
    }
}
